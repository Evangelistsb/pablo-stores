{"version":3,"sources":["Form.js","App.js","index.js"],"names":["PabloForm","createPackage","useState","name","setName","image","setImage","description","setDescription","cost","setCost","className","Row","Form","Label","lg","Col","Control","size","type","value","onChange","e","target","onClick","PABLO_CONTRACT_ADDRESS","App","kit","setKit","packages","setPackages","balance","setBalance","transaction","setTransaction","walletAddress","setWalletAddress","pabloContract","setPabloContract","useEffect","connectWallet","getBalance","loadPackages","formatNumber","_number","BigNumber","shiftedBy","toString","slots","amountIn","percent","confirm","approvePayment","_amount","cUSDContract","web3","eth","Contract","ERC20_ABI","methods","approve","send","from","defaultAccount","window","celo","enable","Web3","newKitFromWeb3","getAccounts","accounts","console","log","alert","getTotalBalance","cUsdBalance","cUSD","toFixed","pablo","PABLO_ABI","getIndex","call","total","_packages","i","Promise","resolve","getPackage","_package","index","imageUrl","percentOut","buyers","package_","push","all","pkgs","convertedCost","txn","buyPackage","_price","_percent","check","includes","map","p","src","length","b","_address","diameter","seed","jsNumberForAddress","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2cfa7e38.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Row, Col } from \"react-bootstrap\";\r\nimport \"./Form.css\";\r\n\r\nconst PabloForm = ({ createPackage }) => {\r\n  const [name, setName] = useState();\r\n  const [image, setImage] = useState();\r\n  const [description, setDescription] = useState();\r\n  const [cost, setCost] = useState();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"pablo-form\">\r\n        <div className=\"form-name\">New Package</div>\r\n        <div className=\"form-main\">\r\n          <Row>\r\n            <Form.Label lg={2}>Package Name</Form.Label>\r\n            <Col>\r\n              <Form.Control\r\n                size=\"lg\"\r\n                type=\"text\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <Row>\r\n            <Form.Label lg={2}>Package Description</Form.Label>\r\n            <Col>\r\n              <Form.Control\r\n                size=\"lg\"\r\n                type=\"text\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <Row>\r\n            <Form.Label lg={2}>Package URL</Form.Label>\r\n            <Col>\r\n              <Form.Control\r\n                size=\"lg\"\r\n                type=\"text\"\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <Row>\r\n            <Form.Label lg={2}>Package Cost</Form.Label>\r\n            <Col>\r\n              <Form.Control\r\n                size=\"lg\"\r\n                type=\"number\"\r\n                value={cost}\r\n                onChange={(e) => setCost(e.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <div\r\n            className=\"continue\"\r\n            onClick={() => createPackage(name, image, description, cost)}\r\n          >\r\n            Continue\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PabloForm;\r\n","import { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport { newKitFromWeb3 } from \"@celo/contractkit\";\nimport BigNumber from \"bignumber.js\";\nimport Jazzicon, { jsNumberForAddress } from \"react-jazzicon\";\nimport PabloForm from \"./Form\";\n\nimport PABLO_ABI from \"./contracts/pablo.abi.json\";\nimport ERC20_ABI from \"./contracts/erc20.abi.json\";\nimport \"./App.css\";\n\nconst ERC20_DECIMALS = 18;\nconst PABLO_CONTRACT_ADDRESS = \"0xE53D7502D4070335712014B42c6D7690472aA49d\";\nconst cUSDContractAddress = \"0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1\";\n\nfunction App() {\n  const [kit, setKit] = useState();\n  const [packages, setPackages] = useState();\n  const [balance, setBalance] = useState(0);\n  const [transaction, setTransaction] = useState();\n  const [walletAddress, setWalletAddress] = useState();\n  const [pabloContract, setPabloContract] = useState();\n\n  useEffect(() => {\n    connectWallet();\n  }, []);\n\n  useEffect(() => {\n    if (kit && walletAddress) {\n      getBalance();\n    }\n  }, [kit, walletAddress]);\n\n  useEffect(() => {\n    if (pabloContract) {\n      loadPackages();\n    }\n  }, [pabloContract, transaction]);\n\n  const identicon = (_address) => {\n    return <Jazzicon diameter={40} seed={jsNumberForAddress(_address)} />;\n  };\n\n  const formatNumber = (_number) => {\n    return BigNumber(_number).shiftedBy(-18).toString();\n  };\n\n  const slots = (cost, amountIn) => {\n    const percent = (amountIn / cost) * 100;\n    if (percent === 100) {\n      return \"None\";\n    } else if (percent === 75) {\n      return '25%';\n    } else if (percent === 50) {\n      return '50%, 25%';\n    } else if (percent === 25) {\n      return '75%, 50%, 25%';\n    } else if (percent === 0) {\n      return '100%, 75%, 50%, 25%';\n    }\n  };\n\n  const confirm = (cost, amountIn) => {  \n    const percent = (amountIn / cost) * 100; \n    if (percent === 100) {\n      return [];\n    } else if (percent == 75) {\n      return [25];\n    } else if (percent == 50) {\n      return [50, 25];\n    } else if (percent == 25) {\n      return [75, 50, 25];\n    } else if (percent == 0) {\n      return [100, 75, 50, 25];\n    } else {\n      return []\n    }\n  }\n\n  const approvePayment = async (_amount) => {\n    const cUSDContract = new kit.web3.eth.Contract(\n      ERC20_ABI,\n      cUSDContractAddress\n    );\n    await cUSDContract.methods\n      .approve(PABLO_CONTRACT_ADDRESS, _amount)\n      .send({ from: kit.defaultAccount });\n  };\n\n  // connect wallet to app\n  const connectWallet = async () => {\n    if (window.celo) {\n      // alert(\"⚠️ Please approve this DApp to use it.\");\n      try {\n        await window.celo.enable();\n        const web3 = new Web3(window.celo);\n        let kit = newKitFromWeb3(web3);\n\n        const accounts = await kit.web3.eth.getAccounts();\n        const defaultAccount = accounts[0];\n        kit.defaultAccount = defaultAccount;\n\n        setKit(kit);\n        setWalletAddress(defaultAccount);\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      alert(\n        \"You need to install the celo wallet extension in order to use this app\"\n      );\n    }\n  };\n\n  // get both cUSD balance and RP balance\n  const getBalance = async () => {\n    try {\n      const balance = await kit.getTotalBalance(walletAddress);\n      const cUsdBalance = balance.cUSD.shiftedBy(-ERC20_DECIMALS).toFixed(2);\n      const pablo = new kit.web3.eth.Contract(\n        PABLO_ABI,\n        PABLO_CONTRACT_ADDRESS\n      );\n\n      setBalance(cUsdBalance);\n      setPabloContract(pablo);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const loadPackages = async () => {\n    try {\n      const total = await pabloContract.methods.getIndex().call();\n      const _packages = [];\n      for (let i = 0; i < total; i++) {\n        let package_ = await new Promise(async (resolve) => {\n          let _package = await pabloContract.methods.getPackage(i).call();\n          resolve({\n            index: i,\n            cost: _package[0],\n            amountIn: _package[1],\n            name: _package[2],\n            imageUrl: _package[3],\n            description: _package[4],\n            percentOut: _package[5],\n            buyers: _package[6],\n          });\n        });\n        _packages.push(package_);\n      }\n      const pkgs = await Promise.all(_packages);\n      setPackages(pkgs);\n      console.log(packages);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const createPackage = async (name, imageUrl, description, cost) => {\n    try {\n      const convertedCost = new BigNumber(cost)\n        .shiftedBy(ERC20_DECIMALS)\n        .toString();\n      const txn = await pabloContract.methods\n        .createPackage(name, imageUrl, description, convertedCost)\n        .send({ from: walletAddress });\n      setTransaction(txn);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const buyPackage = async (index, _price, _percent) => {\n    const check = confirm(packages[index].cost, packages[index].amountIn).includes(_percent);\n    console.log(check)\n    if (!check) {\n      alert(\"You have entered an invalid slot. Please try again\");\n      return\n    }    \n    const total = BigNumber((_price * _percent) / 100).toString();\n    try {\n      await approvePayment(total);\n    } catch (e) {\n      console.log(e);\n    }\n\n    try {\n      const txn = await pabloContract.methods\n        .buyPackage(index, _percent)\n        .send({ from: walletAddress });\n        setTransaction(txn);\n    } catch (e) { \n      console.log(e);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"pablo-header\">\n        <div className=\"header-title\">Pablo Stores</div>\n        <div className=\"header-description\">\n          Buy now even if you don't have the full amount\n        </div>\n        <div>Wallet Balance: {balance} cUSD</div>\n      </div>\n      <div className=\"pablo-body\">\n        <div className=\"pablo-packages\">\n          {packages?.map((p) => (\n            <div className=\"p-card\">\n              <img src={p.imageUrl} />\n              <div className=\"card-body\">\n                <div className=\"text\">\n                  <div className=\"name\">{p.name}</div>\n                  <div className=\"description\">{p.description}</div>\n                </div>\n                <div className=\"s-title\">Buyers</div>\n                <div className=\"buyers\">\n                  {p.buyers.length\n                    ? p.buyers.map((b) => identicon(b))\n                    : \"No buyes yet\"}\n                </div>\n                <div className=\"buy-section\">\n                  <div className=\"cost\">\n                    $\n                    {BigNumber(p.cost - p.amountIn)\n                      .shiftedBy(-18)\n                      .toString()}\n                  </div>\n                  <div className=\"s-title\">Pay</div>\n                  <div>Slots available: {slots(p.cost, p.amountIn)}</div>\n                  <div className=\"buy-buttons\">\n                    {p.cost == p.amountIn ? (\n                      \"Package already purchased\"\n                    ) : (\n                      <>\n                        {p.percentOut.length == 0 && (\n                          <div\n                            className=\"buy-button\"\n                            onClick={() => buyPackage(p.index, p.cost, 100)}\n                          >\n                            100% (${formatNumber(p.cost)})\n                          </div>\n                        )}\n                        <div\n                          className=\"buy-button\"\n                          onClick={() => buyPackage(p.index, p.cost, 75)}\n                        >\n                          75% (${(75 / 100) * formatNumber(p.cost)})\n                        </div>\n                        <div\n                          className=\"buy-button\"\n                          onClick={() => buyPackage(p.index, p.cost, 50)}\n                        >\n                          50% (${(50 / 100) * formatNumber(p.cost)})\n                        </div>\n                        <div\n                          className=\"buy-button\"\n                          onClick={() => buyPackage(p.index, p.cost, 25)}\n                        >\n                          25% (${(25 / 100) * formatNumber(p.cost)})\n                        </div>\n                      </>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n        <hr />\n        <PabloForm createPackage={createPackage} />\n      </div>\n      <div className=\"pablo-footer\">Checkout pablo stores today</div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}